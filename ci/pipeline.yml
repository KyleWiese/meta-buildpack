---

groups:

- name: ci
  jobs:
  - build-image
  - build-buildpack
  - claim-1.6
  - claim-1.7
  - claim-1.8
  - claim-1.9
  - claim-1.10
  - test-1.6
  - test-1.7
  - test-1.8
  - test-1.9
  - test-1.10

- name: release
  jobs:
  - bump-minor
  - bump-major
  - create-release

resource_types:

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:

- name: pipeline-image
  type: docker-image
  source:
    repository: guidowb/meta-buildpack-pipeline
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}

- name: dockerfile-repo
  type: git
  source:
    paths: [ ci/Dockerfile ]
    branch: {{github-branch}}
    uri: http://github.com/cf-platform-eng/meta-buildpack.git

- name: meta-buildpack-repo
  type: git
  source:
    ignore_paths: [ ci/Dockerfile ]
    branch: {{github-branch}}
    uri: http://github.com/cf-platform-eng/meta-buildpack.git

- name: meta-buildpack-release
  type: github-release
  source:
    user: cf-platform-eng
    repository: meta-buildpack
    access_token: {{github-release-token}}

- name: meta-buildpack
  type: s3
  source:
    bucket: {{s3-bucket}}
    regexp: meta_buildpack-v(?P<version>.*)\.zip
    access_key_id: {{s3-access-key}}
    secret_access_key: {{s3-secret}}

- name: generated-tile
  type: s3
  source:
    bucket: {{s3-bucket}}
    regexp: meta-buildpack-(?P<version>.*)\.pivotal
    access_key_id: {{s3-access-key}}
    secret_access_key: {{s3-secret}}

- name: tile-history
  type: s3
  source:
    bucket: {{s3-bucket}}
    regexp: tile\-history-(?P<version>.*)\.yml
    access_key_id: {{s3-access-key}}
    secret_access_key: {{s3-secret}}

- name: pcf-environment-1-6
  type: pool
  source:
    uri: git@github.com:cf-platform-eng/pipeline-resource-pool-v2
    branch: master
    pool: pcf1_6
    private_key: {{github-pool-private-key}}

- name: pcf-environment-1-7
  type: pool
  source:
    uri: git@github.com:cf-platform-eng/pipeline-resource-pool-v2
    branch: master
    pool: pcf1_7
    private_key: {{github-pool-private-key}}

- name: pcf-environment-1-8
  type: pool
  source:
    uri: git@github.com:cf-platform-eng/pipeline-resource-pool-v2
    branch: master
    pool: pcf1_8
    private_key: {{github-pool-private-key}}

- name: pcf-environment-1-9
  type: pool
  source:
    uri: git@github.com:cf-platform-eng/pipeline-resource-pool-v2
    branch: master
    pool: pcf
    private_key: {{github-pool-private-key}}

- name: pcf-environment-1-10
  type: pool
  source:
    uri: git@github.com:cf-platform-eng/pipeline-resource-pool-v2
    branch: master
    pool: pcf1_10
    private_key: {{github-pool-private-key}}

- name: slack-alert
  type: slack-notification
  source:
    url: {{slack-hook}}

- name: version
  type: semver
  source:
    driver: git
    uri: git@github.com:cf-platform-eng/meta-buildpack
    branch: version
    file: version
    private_key: {{github-semver-private-key}}

jobs:

- name: build-image
  plan:
  - get: dockerfile-repo
    trigger: true
  - put: pipeline-image
    params:
      build: dockerfile-repo/ci

- name: bump-minor
  plan:
  - put: version
    params:
      bump: minor

- name: bump-major
  plan:
  - put: version
    params:
      bump: major

- name: build-buildpack
  plan:
  - aggregate:
    - get: pipeline-image
      passed: [ build-image ]
      trigger: true
    - get: meta-buildpack-repo
      trigger: true
    - put: version
      params:
        pre: pre
  - task: build-buildpack
    image: pipeline-image
    config:
      platform: linux
      inputs:
      - name: meta-buildpack-repo
        path: meta-buildpack
      - name: version
      outputs:
      - name: buildpack
      run:
        path: sh
        args:
        - -exc
        - |
          (cd meta-buildpack; ./build)
          VERSION=`cat version/number`
          cp meta-buildpack/meta_buildpack.zip buildpack/meta_buildpack-v${VERSION}.zip
    on_failure:
      aggregate:
      - put: slack-alert
        params:
          channel: {{slack-channel}}
          icon_emoji: ':concourse:'
          text: '{{github-branch}} Meta-buildpack build failed, {{slack-href}}'
          username: Meta Buildpack
  - put: meta-buildpack
    params:
      file: buildpack/meta_buildpack-*.zip

- name: claim-1.6
  plan:
  - aggregate:
    - get: pipeline-image
      passed: [ build-buildpack ]
      trigger: true
    - get: meta-buildpack-repo
      passed: [ build-buildpack ]
      trigger: true
    - get: meta-buildpack
      passed: [ build-buildpack ]
      trigger: true
    - get: version
      passed: [ build-buildpack ]
  - put: pcf-environment-1-6
    params:
      acquire: true

- name: test-1.6
  plan:
  - aggregate:
    - get: pipeline-image
      passed: [ claim-1.6 ]
      trigger: true
    - get: meta-buildpack-repo
      passed: [ claim-1.6 ]
      trigger: true
    - get: meta-buildpack
      passed: [ claim-1.6 ]
      trigger: true
    - get: version
      passed: [ claim-1.6 ]
    - get: pcf-environment-1-6
      passed: [ claim-1.6 ]
      trigger: true
  - task: test-buildpack
    image: pipeline-image
    config:
      platform: linux
      inputs:
      - name: meta-buildpack-repo
        path: meta-buildpack
      - name: meta-buildpack
        path: buildpack
      - name: pcf-environment-1-6
      run:
        path: sh
        args:
        - -exc
        - |
          (cd pcf-environment-1-6; pcf target -o system -s system)
          cp buildpack/meta_buildpack-v*.zip meta-buildpack/meta_buildpack.zip
          cd meta-buildpack/test
          ./run
    ensure:
      put: pcf-environment-1-6
      params:
        release: pcf-environment-1-6
    on_failure:
      aggregate:
      - put: slack-alert
        params:
          channel: {{slack-channel}}
          icon_emoji: ':concourse:'
          text: '{{github-branch}} Meta-buildpack test failed on PCF 1.6, {{slack-href}}'
          username: Meta Buildpack

- name: claim-1.7
  plan:
  - aggregate:
    - get: pipeline-image
      passed: [ build-buildpack ]
      trigger: true
    - get: meta-buildpack-repo
      passed: [ build-buildpack ]
      trigger: true
    - get: meta-buildpack
      passed: [ build-buildpack ]
      trigger: true
    - get: version
      passed: [ build-buildpack ]
  - put: pcf-environment-1-7
    params:
      acquire: true

- name: test-1.7
  plan:
  - aggregate:
    - get: pipeline-image
      passed: [ claim-1.7 ]
      trigger: true
    - get: meta-buildpack-repo
      passed: [ claim-1.7 ]
      trigger: true
    - get: meta-buildpack
      passed: [ claim-1.7 ]
      trigger: true
    - get: version
      passed: [ claim-1.7 ]
    - get: pcf-environment-1-7
      passed: [ claim-1.7 ]
      trigger: true
  - task: test-buildpack
    image: pipeline-image
    config:
      platform: linux
      inputs:
      - name: meta-buildpack-repo
        path: meta-buildpack
      - name: meta-buildpack
        path: buildpack
      - name: pcf-environment-1-7
      run:
        path: sh
        args:
        - -exc
        - |
          (cd pcf-environment-1-7; pcf target -o system -s system)
          cp buildpack/meta_buildpack-v*.zip meta-buildpack/meta_buildpack.zip
          cd meta-buildpack/test
          ./run
    ensure:
      put: pcf-environment-1-7
      params:
        release: pcf-environment-1-7
    on_failure:
      aggregate:
      - put: slack-alert
        params:
          channel: {{slack-channel}}
          icon_emoji: ':concourse:'
          text: '{{github-branch}} Meta-buildpack test failed on PCF 1.7, {{slack-href}}'
          username: Meta Buildpack

- name: claim-1.8
  plan:
  - aggregate:
    - get: pipeline-image
      passed: [ build-buildpack ]
      trigger: true
    - get: meta-buildpack-repo
      passed: [ build-buildpack ]
      trigger: true
    - get: meta-buildpack
      passed: [ build-buildpack ]
      trigger: true
    - get: version
      passed: [ build-buildpack ]
  - put: pcf-environment-1-8
    params:
      acquire: true

- name: test-1.8
  plan:
  - aggregate:
    - get: pipeline-image
      passed: [ claim-1.8 ]
      trigger: true
    - get: meta-buildpack-repo
      passed: [ claim-1.8 ]
      trigger: true
    - get: meta-buildpack
      passed: [ claim-1.8 ]
      trigger: true
    - get: version
      passed: [ claim-1.8 ]
    - get: pcf-environment-1-8
      passed: [ claim-1.8 ]
      trigger: true
  - task: test-buildpack
    image: pipeline-image
    config:
      platform: linux
      inputs:
      - name: meta-buildpack-repo
        path: meta-buildpack
      - name: meta-buildpack
        path: buildpack
      - name: pcf-environment-1-8
      run:
        path: sh
        args:
        - -exc
        - |
          (cd pcf-environment-1-8; pcf target -o system -s system)
          cp buildpack/meta_buildpack-v*.zip meta-buildpack/meta_buildpack.zip
          cd meta-buildpack/test
          ./run
    ensure:
      put: pcf-environment-1-8
      params:
        release: pcf-environment-1-8
    on_failure:
      aggregate:
      - put: slack-alert
        params:
          channel: {{slack-channel}}
          icon_emoji: ':concourse:'
          text: '{{github-branch}} Meta-buildpack test failed on PCF 1.8, {{slack-href}}'
          username: Meta Buildpack

- name: claim-1.9
  plan:
  - aggregate:
    - get: pipeline-image
      passed: [ build-buildpack ]
      trigger: true
    - get: meta-buildpack-repo
      passed: [ build-buildpack ]
      trigger: true
    - get: meta-buildpack
      passed: [ build-buildpack ]
      trigger: true
    - get: version
      passed: [ build-buildpack ]
  - put: pcf-environment-1-9
    params:
      acquire: true

- name: test-1.9
  plan:
  - aggregate:
    - get: pipeline-image
      passed: [ claim-1.9 ]
      trigger: true
    - get: meta-buildpack-repo
      passed: [ claim-1.9 ]
      trigger: true
    - get: meta-buildpack
      passed: [ claim-1.9 ]
      trigger: true
    - get: version
      passed: [ claim-1.9 ]
    - get: pcf-environment-1-9
      passed: [ claim-1.9 ]
      trigger: true
  - task: test-buildpack
    image: pipeline-image
    config:
      platform: linux
      inputs:
      - name: meta-buildpack-repo
        path: meta-buildpack
      - name: meta-buildpack
        path: buildpack
      - name: pcf-environment-1-9
      run:
        path: sh
        args:
        - -exc
        - |
          (cd pcf-environment-1-9; pcf target -o system -s system)
          cp buildpack/meta_buildpack-v*.zip meta-buildpack/meta_buildpack.zip
          cd meta-buildpack/test
          ./run
    ensure:
      put: pcf-environment-1-9
      params:
        release: pcf-environment-1-9
    on_failure:
      aggregate:
      - put: slack-alert
        params:
          channel: {{slack-channel}}
          icon_emoji: ':concourse:'
          text: '{{github-branch}} Meta-buildpack test failed on PCF 1.9, {{slack-href}}'
          username: Meta Buildpack

- name: claim-1.10
  plan:
  - aggregate:
    - get: pipeline-image
      passed: [ build-buildpack ]
      trigger: true
    - get: meta-buildpack-repo
      passed: [ build-buildpack ]
      trigger: true
    - get: meta-buildpack
      passed: [ build-buildpack ]
      trigger: true
    - get: version
      passed: [ build-buildpack ]
  - put: pcf-environment-1-10
    params:
      acquire: true

- name: test-1.10
  plan:
  - aggregate:
    - get: pipeline-image
      passed: [ claim-1.10 ]
      trigger: true
    - get: meta-buildpack-repo
      passed: [ claim-1.10 ]
      trigger: true
    - get: meta-buildpack
      passed: [ claim-1.10 ]
      trigger: true
    - get: version
      passed: [ claim-1.10 ]
    - get: pcf-environment-1-10
      passed: [ claim-1.10 ]
      trigger: true
  - task: test-buildpack
    image: pipeline-image
    config:
      platform: linux
      inputs:
      - name: meta-buildpack-repo
        path: meta-buildpack
      - name: meta-buildpack
        path: buildpack
      - name: pcf-environment-1-10
      run:
        path: sh
        args:
        - -exc
        - |
          (cd pcf-environment-1-10; pcf target -o system -s system)
          cp buildpack/meta_buildpack-v*.zip meta-buildpack/meta_buildpack.zip
          cd meta-buildpack/test
          ./run
    ensure:
      put: pcf-environment-1-10
      params:
        release: pcf-environment-1-10
    on_failure:
      aggregate:
      - put: slack-alert
        params:
          channel: {{slack-channel}}
          icon_emoji: ':concourse:'
          text: '{{github-branch}} Meta-buildpack test failed on PCF 1.10, {{slack-href}}'
          username: Meta Buildpack

- name: create-release
  plan:
  - aggregate:
    - get: pipeline-image
      passed: [ test-1.6, test-1.7, test-1.8, test-1.9, test-1.10 ]
    - get: meta-buildpack-repo
      passed: [ test-1.6, test-1.7, test-1.8, test-1.9, test-1.10 ]
    - get: meta-buildpack
      passed: [ test-1.6, test-1.7, test-1.8, test-1.9, test-1.10 ]
    - get: version
      passed: [ test-1.6, test-1.7, test-1.8, test-1.9, test-1.10 ]
    - get: tile-history
  - put: version
    params:
      bump: final
  - task: build-tile
    image: pipeline-image
    config:
      platform: linux
      inputs:
      - name: meta-buildpack-repo
        path: meta-buildpack
      - name: meta-buildpack
        path: buildpack
      - name: tile-history
      - name: version
      outputs:
      - name: generated-tile
      run:
        path: sh
        args:
        - -exc
        - |
          HISTORY=`ls tile-history/tile-history-*.yml`
          if [ -n "${HISTORY}" ]; then
            cp ${HISTORY} meta-buildpack/tile-history.yml
          fi
          VERSION=`cat version/number`
          cp buildpack/meta_buildpack-*.zip meta-buildpack/meta_buildpack.zip
          (cd meta-buildpack; tile build "${VERSION}")
          HISTORY="tile-history-${VERSION}.yml"
          cp meta-buildpack/product/*.pivotal generated-tile
          cp meta-buildpack/product/releases/*.tgz generated-tile
          cp meta-buildpack/tile-history.yml generated-tile/tile-history-${VERSION}.yml
          echo "Meta Buildpack v${VERSION}" > generated-tile/release-name.txt
          echo "${VERSION}" > generated-tile/release-version.txt
    on_failure:
      aggregate:
      - put: slack-alert
        params:
          channel: {{slack-channel}}
          icon_emoji: ':concourse:'
          text: '{{github-branch}} Meta-buildpack build tile failed, {{slack-href}}'
          username: Meta Buildpack
  - put: version
    params:
      bump: patch
  - put: tile-history
    params:
      file: generated-tile/tile-history-*.yml
  - put: meta-buildpack-release
    params:
      name: generated-tile/release-name.txt
      tag: generated-tile/release-version.txt
      tag_prefix: v
      globs:
      - generated-tile/*.tgz
      - generated-tile/*.pivotal
  - put: generated-tile
    params:
      file: generated-tile/*.pivotal

